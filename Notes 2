
JAVASCRIPT

VARIABLES
---------
---------

It's a good programming practice to declare all variables at the beginning of a script.

let carName = "Volvo";

let person = "John Doe", carName = "Volvo", price = 200;

let person = "John Doe",
carName = "Volvo",
price = 200;

let carName; - means variable is declared but undefined

$ and _ are seen as a letters,  and therefore valid as a variable name


OPERATORS
---------
---------

In JavaScript, the equal sign (=) is an "assignment" operator, not an "equal to" operator.

Arithmetic (Bodmas)

Operator	Description
+	        Addition
-	        Subtraction
*	        Multiplication
**	      Exponentiation - the operation of raising one quantity to the power of another. (ES2016)
/	        Division
%	        Modulus (Division Remainder) - alert(15%9);    - means remainder (6)
++	      Increment
--	      Decrement

Assignment

Operator	Example	   Same As
=	        x = y      x = y              Simple Assignment Operator assigns a value to a variable.
+=	      x += y	   x = x + y          The Addition Assignment Operator adds a value to a variable.
-=	      x -= y	   x = x - y          The Subtraction Assignment Operator subtracts a value from a variable
*=	      x *= y	   x = x * y          The Multiplication Assignment Operator multiplies a variable.
/=	      x /= y	   x = x / y          The Division Assignment Operator divides a variable.
%=	      x %= y	   x = x % y          The Remainder Assignment Operator assigns a remainder to a variable
**=	      x **= y	   x = x ** y         The Exponentiation Assignment Operator raises a variable to the power of the operand.

let x = 10;
x /= 5;
RESULT = 2

let x = 5;
let y = 2;
let z = x % y;
RESULT = 1

Shift Assignment Operators

Operator	Example	      Same As
<<=	      x <<= y	      x = x << y           The left shift assignment (<<=) operator performs left shift on the two operands and assigns the result to the left operand.
>>=	      x >>= y	      x = x >> y           The right shift assignment (>>=) operator performs right shift on the two operands and assigns the result to the left operand. This operation is also called "sign-propagating right shift" or "arithmetic right shift", because the sign of the resulting number is the same as the sign of the first operand.
>>>=	    x >>>= y	    x = x >>> y          The unsigned right shift assignment (>>>=) operator performs unsigned right shift on the two operands and assigns the result to the left operand. This operation is also called "zero-filling right shift", because the sign bit becomes 0, so the resulting number is always positive. Unsigned right shift does not accept BigInt values.

let a = 5; // 00000000000000000000000000000101
a <<= 2; // 00000000000000000000000000010100
console.log(a);
RESULT = 20

let x = 5; //  00000000000000000000000000000101
x >>= 2; //  00000000000000000000000000000001
console.log(x);
RESULT = 1

Bitwise Assignment Operators

Operator	Example	      Same As
&=	      x &= y	      x = x & y            The Bitwise AND Assignment Operator does a bitwise AND operation on two operands and assigns the result to the the variable.
^=	      x ^= y	      x = x ^ y            The Bitwise XOR Assignment Operator does a bitwise XOR operation on two operands and assigns the result to the variable.
|=	      x |= y	      x = x | y            The Bitwise OR Assignment Operator does a bitwise OR operation on two operands and assigns the result to the variable.

Logical Assignment Operators

Operator	Example	      Same As
&&=     	x &&= y	      x = x && (x = y)      The Logical AND assignment operator is used between two values. If the first value is true, the second value is assigned.
||=	      x ||= y	      x = x || (x = y)      The Logical OR assignment operator is used between two values. If the first value is false, the second value is assigned.
??=	      x ??= y	      x = x ?? (x = y)      The Nullish coalescing assignment operator is used between two values. If the first value is undefined or null, the second value is assigned.



















